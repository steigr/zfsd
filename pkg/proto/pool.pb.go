// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pool.proto

package zfs

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PoolT struct {
	Name                 string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Properties           []*Property `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PoolT) Reset()         { *m = PoolT{} }
func (m *PoolT) String() string { return proto.CompactTextString(m) }
func (*PoolT) ProtoMessage()    {}
func (*PoolT) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a14d8612184524f, []int{0}
}

func (m *PoolT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PoolT.Unmarshal(m, b)
}
func (m *PoolT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PoolT.Marshal(b, m, deterministic)
}
func (m *PoolT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PoolT.Merge(m, src)
}
func (m *PoolT) XXX_Size() int {
	return xxx_messageInfo_PoolT.Size(m)
}
func (m *PoolT) XXX_DiscardUnknown() {
	xxx_messageInfo_PoolT.DiscardUnknown(m)
}

var xxx_messageInfo_PoolT proto.InternalMessageInfo

func (m *PoolT) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PoolT) GetProperties() []*Property {
	if m != nil {
		return m.Properties
	}
	return nil
}

type ListPoolRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPoolRequest) Reset()         { *m = ListPoolRequest{} }
func (m *ListPoolRequest) String() string { return proto.CompactTextString(m) }
func (*ListPoolRequest) ProtoMessage()    {}
func (*ListPoolRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a14d8612184524f, []int{1}
}

func (m *ListPoolRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPoolRequest.Unmarshal(m, b)
}
func (m *ListPoolRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPoolRequest.Marshal(b, m, deterministic)
}
func (m *ListPoolRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPoolRequest.Merge(m, src)
}
func (m *ListPoolRequest) XXX_Size() int {
	return xxx_messageInfo_ListPoolRequest.Size(m)
}
func (m *ListPoolRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPoolRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPoolRequest proto.InternalMessageInfo

type ListPoolReply struct {
	Pools                []*PoolT `protobuf:"bytes,1,rep,name=pools,proto3" json:"pools,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPoolReply) Reset()         { *m = ListPoolReply{} }
func (m *ListPoolReply) String() string { return proto.CompactTextString(m) }
func (*ListPoolReply) ProtoMessage()    {}
func (*ListPoolReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a14d8612184524f, []int{2}
}

func (m *ListPoolReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPoolReply.Unmarshal(m, b)
}
func (m *ListPoolReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPoolReply.Marshal(b, m, deterministic)
}
func (m *ListPoolReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPoolReply.Merge(m, src)
}
func (m *ListPoolReply) XXX_Size() int {
	return xxx_messageInfo_ListPoolReply.Size(m)
}
func (m *ListPoolReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPoolReply.DiscardUnknown(m)
}

var xxx_messageInfo_ListPoolReply proto.InternalMessageInfo

func (m *ListPoolReply) GetPools() []*PoolT {
	if m != nil {
		return m.Pools
	}
	return nil
}

type GetPoolRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPoolRequest) Reset()         { *m = GetPoolRequest{} }
func (m *GetPoolRequest) String() string { return proto.CompactTextString(m) }
func (*GetPoolRequest) ProtoMessage()    {}
func (*GetPoolRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a14d8612184524f, []int{3}
}

func (m *GetPoolRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPoolRequest.Unmarshal(m, b)
}
func (m *GetPoolRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPoolRequest.Marshal(b, m, deterministic)
}
func (m *GetPoolRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPoolRequest.Merge(m, src)
}
func (m *GetPoolRequest) XXX_Size() int {
	return xxx_messageInfo_GetPoolRequest.Size(m)
}
func (m *GetPoolRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPoolRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPoolRequest proto.InternalMessageInfo

func (m *GetPoolRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetPoolReply struct {
	Pool                 *PoolT   `protobuf:"bytes,1,opt,name=pool,proto3" json:"pool,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPoolReply) Reset()         { *m = GetPoolReply{} }
func (m *GetPoolReply) String() string { return proto.CompactTextString(m) }
func (*GetPoolReply) ProtoMessage()    {}
func (*GetPoolReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a14d8612184524f, []int{4}
}

func (m *GetPoolReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPoolReply.Unmarshal(m, b)
}
func (m *GetPoolReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPoolReply.Marshal(b, m, deterministic)
}
func (m *GetPoolReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPoolReply.Merge(m, src)
}
func (m *GetPoolReply) XXX_Size() int {
	return xxx_messageInfo_GetPoolReply.Size(m)
}
func (m *GetPoolReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPoolReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetPoolReply proto.InternalMessageInfo

func (m *GetPoolReply) GetPool() *PoolT {
	if m != nil {
		return m.Pool
	}
	return nil
}

type CreatePoolRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePoolRequest) Reset()         { *m = CreatePoolRequest{} }
func (m *CreatePoolRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePoolRequest) ProtoMessage()    {}
func (*CreatePoolRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a14d8612184524f, []int{5}
}

func (m *CreatePoolRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePoolRequest.Unmarshal(m, b)
}
func (m *CreatePoolRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePoolRequest.Marshal(b, m, deterministic)
}
func (m *CreatePoolRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePoolRequest.Merge(m, src)
}
func (m *CreatePoolRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePoolRequest.Size(m)
}
func (m *CreatePoolRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePoolRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePoolRequest proto.InternalMessageInfo

type CreatePoolReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePoolReply) Reset()         { *m = CreatePoolReply{} }
func (m *CreatePoolReply) String() string { return proto.CompactTextString(m) }
func (*CreatePoolReply) ProtoMessage()    {}
func (*CreatePoolReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a14d8612184524f, []int{6}
}

func (m *CreatePoolReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePoolReply.Unmarshal(m, b)
}
func (m *CreatePoolReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePoolReply.Marshal(b, m, deterministic)
}
func (m *CreatePoolReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePoolReply.Merge(m, src)
}
func (m *CreatePoolReply) XXX_Size() int {
	return xxx_messageInfo_CreatePoolReply.Size(m)
}
func (m *CreatePoolReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePoolReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePoolReply proto.InternalMessageInfo

type DeletePoolRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePoolRequest) Reset()         { *m = DeletePoolRequest{} }
func (m *DeletePoolRequest) String() string { return proto.CompactTextString(m) }
func (*DeletePoolRequest) ProtoMessage()    {}
func (*DeletePoolRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a14d8612184524f, []int{7}
}

func (m *DeletePoolRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePoolRequest.Unmarshal(m, b)
}
func (m *DeletePoolRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePoolRequest.Marshal(b, m, deterministic)
}
func (m *DeletePoolRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePoolRequest.Merge(m, src)
}
func (m *DeletePoolRequest) XXX_Size() int {
	return xxx_messageInfo_DeletePoolRequest.Size(m)
}
func (m *DeletePoolRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePoolRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePoolRequest proto.InternalMessageInfo

type DeletePoolReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletePoolReply) Reset()         { *m = DeletePoolReply{} }
func (m *DeletePoolReply) String() string { return proto.CompactTextString(m) }
func (*DeletePoolReply) ProtoMessage()    {}
func (*DeletePoolReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a14d8612184524f, []int{8}
}

func (m *DeletePoolReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletePoolReply.Unmarshal(m, b)
}
func (m *DeletePoolReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletePoolReply.Marshal(b, m, deterministic)
}
func (m *DeletePoolReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletePoolReply.Merge(m, src)
}
func (m *DeletePoolReply) XXX_Size() int {
	return xxx_messageInfo_DeletePoolReply.Size(m)
}
func (m *DeletePoolReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletePoolReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeletePoolReply proto.InternalMessageInfo

type UpdatePoolRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePoolRequest) Reset()         { *m = UpdatePoolRequest{} }
func (m *UpdatePoolRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePoolRequest) ProtoMessage()    {}
func (*UpdatePoolRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a14d8612184524f, []int{9}
}

func (m *UpdatePoolRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePoolRequest.Unmarshal(m, b)
}
func (m *UpdatePoolRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePoolRequest.Marshal(b, m, deterministic)
}
func (m *UpdatePoolRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePoolRequest.Merge(m, src)
}
func (m *UpdatePoolRequest) XXX_Size() int {
	return xxx_messageInfo_UpdatePoolRequest.Size(m)
}
func (m *UpdatePoolRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePoolRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePoolRequest proto.InternalMessageInfo

type UpdatePoolReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePoolReply) Reset()         { *m = UpdatePoolReply{} }
func (m *UpdatePoolReply) String() string { return proto.CompactTextString(m) }
func (*UpdatePoolReply) ProtoMessage()    {}
func (*UpdatePoolReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a14d8612184524f, []int{10}
}

func (m *UpdatePoolReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePoolReply.Unmarshal(m, b)
}
func (m *UpdatePoolReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePoolReply.Marshal(b, m, deterministic)
}
func (m *UpdatePoolReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePoolReply.Merge(m, src)
}
func (m *UpdatePoolReply) XXX_Size() int {
	return xxx_messageInfo_UpdatePoolReply.Size(m)
}
func (m *UpdatePoolReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePoolReply.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePoolReply proto.InternalMessageInfo

func init() {
	proto.RegisterType((*PoolT)(nil), "zfs.PoolT")
	proto.RegisterType((*ListPoolRequest)(nil), "zfs.ListPoolRequest")
	proto.RegisterType((*ListPoolReply)(nil), "zfs.ListPoolReply")
	proto.RegisterType((*GetPoolRequest)(nil), "zfs.GetPoolRequest")
	proto.RegisterType((*GetPoolReply)(nil), "zfs.GetPoolReply")
	proto.RegisterType((*CreatePoolRequest)(nil), "zfs.CreatePoolRequest")
	proto.RegisterType((*CreatePoolReply)(nil), "zfs.CreatePoolReply")
	proto.RegisterType((*DeletePoolRequest)(nil), "zfs.DeletePoolRequest")
	proto.RegisterType((*DeletePoolReply)(nil), "zfs.DeletePoolReply")
	proto.RegisterType((*UpdatePoolRequest)(nil), "zfs.UpdatePoolRequest")
	proto.RegisterType((*UpdatePoolReply)(nil), "zfs.UpdatePoolReply")
}

func init() { proto.RegisterFile("pool.proto", fileDescriptor_8a14d8612184524f) }

var fileDescriptor_8a14d8612184524f = []byte{
	// 310 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0xfb, 0x27, 0x2d, 0x38, 0xb6, 0x96, 0x4c, 0x8b, 0x94, 0x1c, 0x24, 0x2c, 0x1e, 0x7a,
	0x31, 0x62, 0xbc, 0x78, 0x57, 0x28, 0x88, 0x87, 0x12, 0xf4, 0x03, 0x54, 0x9d, 0x42, 0x61, 0xd3,
	0x5d, 0xb3, 0xeb, 0x21, 0xfd, 0x26, 0x7e, 0x5b, 0xd9, 0xdd, 0x50, 0x37, 0x59, 0x6f, 0xc9, 0x6f,
	0xde, 0x7b, 0x99, 0x79, 0x04, 0x40, 0x0a, 0xc1, 0x33, 0x59, 0x09, 0x2d, 0x70, 0x78, 0xdc, 0xa9,
	0x64, 0xf2, 0x21, 0xca, 0x52, 0x1c, 0x1c, 0x62, 0xcf, 0x30, 0xda, 0x08, 0xc1, 0x5f, 0x11, 0x21,
	0x3a, 0x6c, 0x4b, 0x5a, 0xf6, 0xd3, 0xfe, 0xea, 0xac, 0xb0, 0xcf, 0x78, 0x03, 0x20, 0x2b, 0x21,
	0xa9, 0xd2, 0x7b, 0x52, 0xcb, 0x41, 0x3a, 0x5c, 0x9d, 0xe7, 0xd3, 0xec, 0xb8, 0x53, 0xd9, 0xc6,
	0xe1, 0xba, 0xf0, 0x04, 0x2c, 0x86, 0xd9, 0xcb, 0x5e, 0x69, 0x93, 0x57, 0xd0, 0xd7, 0x37, 0x29,
	0xcd, 0xee, 0x60, 0xfa, 0x87, 0x24, 0xaf, 0x31, 0x85, 0x91, 0x59, 0x48, 0x2d, 0xfb, 0x36, 0x0d,
	0x5c, 0x9a, 0xd9, 0xa0, 0x70, 0x03, 0x76, 0x0d, 0x17, 0x6b, 0xf2, 0x43, 0xfe, 0x5b, 0x8d, 0x65,
	0x30, 0x39, 0xa9, 0x4c, 0xee, 0x15, 0x44, 0xc6, 0x6e, 0x35, 0xed, 0x58, 0xcb, 0xd9, 0x1c, 0xe2,
	0xc7, 0x8a, 0xb6, 0x9a, 0xfc, 0xed, 0x62, 0x98, 0xf9, 0x50, 0xf2, 0xda, 0xe8, 0x9e, 0x88, 0x53,
	0xa0, 0xf3, 0x61, 0xa3, 0x7b, 0x93, 0x9f, 0x61, 0x9e, 0x0f, 0x25, 0xaf, 0xf3, 0x9f, 0x01, 0x44,
	0xe6, 0x0d, 0x73, 0x88, 0x4c, 0x13, 0xb8, 0xb0, 0xab, 0x75, 0x7a, 0x4a, 0xb0, 0x43, 0xcd, 0x27,
	0x7a, 0x78, 0x0b, 0xc3, 0x35, 0x69, 0x9c, 0xdb, 0x61, 0xbb, 0x94, 0x24, 0x6e, 0x43, 0x67, 0x78,
	0x80, 0xb1, 0x3b, 0x08, 0x2f, 0xed, 0x38, 0x38, 0x39, 0x59, 0x04, 0xfc, 0xe4, 0x74, 0x27, 0x36,
	0xce, 0xa0, 0x84, 0xc6, 0xd9, 0xed, 0xc1, 0x3a, 0xdd, 0xd1, 0x8d, 0x33, 0xa8, 0xa5, 0x71, 0x76,
	0x9a, 0x61, 0xbd, 0xf7, 0xb1, 0xfd, 0x05, 0xef, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xcd, 0x3c,
	0x14, 0x88, 0xa3, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PoolClient is the client API for Pool service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PoolClient interface {
	List(ctx context.Context, in *ListPoolRequest, opts ...grpc.CallOption) (*ListPoolReply, error)
	Get(ctx context.Context, in *GetPoolRequest, opts ...grpc.CallOption) (*GetPoolReply, error)
	Create(ctx context.Context, in *CreatePoolRequest, opts ...grpc.CallOption) (*CreatePoolReply, error)
	Delete(ctx context.Context, in *DeletePoolRequest, opts ...grpc.CallOption) (*DeletePoolReply, error)
	Update(ctx context.Context, in *UpdatePoolRequest, opts ...grpc.CallOption) (*UpdatePoolReply, error)
}

type poolClient struct {
	cc *grpc.ClientConn
}

func NewPoolClient(cc *grpc.ClientConn) PoolClient {
	return &poolClient{cc}
}

func (c *poolClient) List(ctx context.Context, in *ListPoolRequest, opts ...grpc.CallOption) (*ListPoolReply, error) {
	out := new(ListPoolReply)
	err := c.cc.Invoke(ctx, "/zfs.Pool/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *poolClient) Get(ctx context.Context, in *GetPoolRequest, opts ...grpc.CallOption) (*GetPoolReply, error) {
	out := new(GetPoolReply)
	err := c.cc.Invoke(ctx, "/zfs.Pool/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *poolClient) Create(ctx context.Context, in *CreatePoolRequest, opts ...grpc.CallOption) (*CreatePoolReply, error) {
	out := new(CreatePoolReply)
	err := c.cc.Invoke(ctx, "/zfs.Pool/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *poolClient) Delete(ctx context.Context, in *DeletePoolRequest, opts ...grpc.CallOption) (*DeletePoolReply, error) {
	out := new(DeletePoolReply)
	err := c.cc.Invoke(ctx, "/zfs.Pool/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *poolClient) Update(ctx context.Context, in *UpdatePoolRequest, opts ...grpc.CallOption) (*UpdatePoolReply, error) {
	out := new(UpdatePoolReply)
	err := c.cc.Invoke(ctx, "/zfs.Pool/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PoolServer is the server API for Pool service.
type PoolServer interface {
	List(context.Context, *ListPoolRequest) (*ListPoolReply, error)
	Get(context.Context, *GetPoolRequest) (*GetPoolReply, error)
	Create(context.Context, *CreatePoolRequest) (*CreatePoolReply, error)
	Delete(context.Context, *DeletePoolRequest) (*DeletePoolReply, error)
	Update(context.Context, *UpdatePoolRequest) (*UpdatePoolReply, error)
}

func RegisterPoolServer(s *grpc.Server, srv PoolServer) {
	s.RegisterService(&_Pool_serviceDesc, srv)
}

func _Pool_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoolServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zfs.Pool/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoolServer).List(ctx, req.(*ListPoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pool_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoolServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zfs.Pool/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoolServer).Get(ctx, req.(*GetPoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pool_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoolServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zfs.Pool/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoolServer).Create(ctx, req.(*CreatePoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pool_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoolServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zfs.Pool/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoolServer).Delete(ctx, req.(*DeletePoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pool_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PoolServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/zfs.Pool/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PoolServer).Update(ctx, req.(*UpdatePoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Pool_serviceDesc = grpc.ServiceDesc{
	ServiceName: "zfs.Pool",
	HandlerType: (*PoolServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Pool_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Pool_Get_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Pool_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Pool_Delete_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Pool_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pool.proto",
}
